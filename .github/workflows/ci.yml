name: üß© CI - Live Library 24/7

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    name: ‚öôÔ∏è Build & Test Backend
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Sonne1!#
          MYSQL_DATABASE: live_library_manage_system
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # -------------------------------
      # 1Ô∏è‚É£ Checkout repository
      # -------------------------------
      - name: üõéÔ∏è Checkout repository
        uses: actions/checkout@v4

      # -------------------------------
      # 2Ô∏è‚É£ Setup Python environment
      # -------------------------------
      - name: üêç Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # -------------------------------
      # 3Ô∏è‚É£ Install dependencies
      # -------------------------------
      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # -------------------------------
      # 4Ô∏è‚É£ Wait for MySQL to be ready
      # -------------------------------
      - name: ‚è≥ Wait for MySQL
        run: |
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo "Waiting for MySQL to start..."
            sleep 3
          done

      # -------------------------------
      # 5Ô∏è‚É£ Initialize Database Schema
      # -------------------------------
      - name: üóÑÔ∏è Import Database Schema
        run: |
          mysql -h 127.0.0.1 -u root -pSonne1!# < database/Live_library_manage_system.sql
          mysql -h 127.0.0.1 -u root -pSonne1!# < database/insertion.sql
          mysql -h 127.0.0.1 -u root -pSonne1!# < database/CRUD_experts.sql
          mysql -h 127.0.0.1 -u root -pSonne1!# < database/CRUD_courses.sql

      # -------------------------------
      # 6Ô∏è‚É£ Lint Python Code
      # -------------------------------
      - name: üßπ Lint code with flake8
        run: |
          pip install flake8
          flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics

      # -------------------------------
      # 7Ô∏è‚É£ Run FastAPI syntax & tests
      # -------------------------------
      - name: üß™ Test FastAPI imports
        run: |
          python -m compileall backend

      # -------------------------------
      # 8Ô∏è‚É£ Validate Streamlit UI
      # -------------------------------
      - name: üíª Check Streamlit scripts
        run: |
          python -m compileall frontend

  # =====================================================
  # Optional: Frontend (Next.js) Build Verification
  # =====================================================
  build-frontend:
    name: üåê Build Next.js Frontend (optional)
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[frontend]') || contains(github.ref, 'frontend')"
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: üõéÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: ‚öõÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build Next.js app
        run: npm run build

      - name: ‚úÖ Run Lint check
        run: npm run lint
